function vector3(vec) {if (vec.x === undefined || vec.y === undefined || vec.z === undefined) {throw new Error("Vector must have x, y, and z components");}const magnitude = Math.sqrt(vec.x * vec.x + vec.y * vec.y + vec.z * vec.z);if (magnitude === 0) {throw new Error("Cannot normalize a zero vector");}const normalized = {x: vec.x / magnitude,y: vec.y / magnitude,z: vec.z / magnitude};function simplifyComponent(value) {if (value > 0) return 1;if (value < 0) return -1;return 0;return {vector: vec,normalized: normalized,dot: function(vec2) {return (vec.x * vec2.x) + (vec.y * vec2.y) + (vec.z * vec2.z);},add: function(vec2) {return {x: vec.x + vec2.x,y: vec.y + vec2.y,z: vec.z + vec2.z};},subtract: function(vec2) {return {x: vec.x - vec2.x,y: vec.y - vec2.y,z: vec.z - vec2.z};},simplify: {x: simplifyComponent(vec.x),y: simplifyComponent(vec.y),z: simplifyComponent(vec.z)}};}
